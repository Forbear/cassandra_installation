---

- name: Cassandra deployment.
  hosts: databases
  tags:
    - install

  tasks:
  - name: Java dependency check.
    tags:
      - check_dependencies
    yum:
      name: java-1.8.0-openjdk
      state: installed
    become: true

  - name: Ensure SELinux is enabled.
    tags:
      - check_dependencies
    selinux:
      policy: targeted
      state: enforcing
    become: true

  - name: Ensure cassandra repo is included.
    tags:
      - check_dependencies
    template:
      src: "files_to_copy/cassandra.repo.j2"
      dest: "/etc/yum.repos.d/cassandra.repo"
    vars:
      version: 311x
    become: true
    register: yum_repo_change

  - name: Update yum cache.
    tags:
      - check_dependencies
    yum:
      update_cache: yes
    become: true
    when: yum_repo_change.changed

  - name: Install cassandra.
    yum:
      name: cassandra
      state: latest
    become: true

- name: Deliver config to nodes.
  hosts: databases
  serial: 1
  tags: 
    - install
    - update_config

  tasks:
  - name: Ensure nodes config is present and up to date.
    template:
      src: "files_to_copy/cassandra.yaml.j2"
      dest: "/etc/cassandra/default.conf/cassandra.yaml"
    vars:
       cluster_name: "Cassandra_cluster_DS"
       seed: 
         - "{{ hostvars['localhost']['groups']['seed0'][0] }}"
         - "{{ hostvars['localhost']['groups']['seed1'][0] }}"
    become: true
    notify: restart_cassandra

  - name: Ensure keystore is present and up to date.
    copy:
      src: ".certificates/.keystore"
      dest: "/etc/cassandra/conf/.keystore"
    become: true
    notify: restart_cassandra

  - name: Ensure truststore is present and up to date.
    copy:
      src: ".certificates/.truststore"
      dest: "/etc/cassandra/conf/.truststore"
    become: true
    notify: restart_cassandra

  handlers:
    - name: Restart cassandra service
      sysvinit:
        name: cassandra
        state: restarted
        enabled: yes
      listen: restart_cassandra
      become: true

    - name: Give some time for cassandra to sturt up.
      wait_for:
        timeout: 50
      listen: await_cassandra

    - name: Validate that cassandra is up and running after restart
      shell: nodetool status
      listen: check_cassandra

- name: Run python script to check cassandra cluster state.
  hosts: seed0
  tags:
    - validate_py

  tasks:
  - name: Ensure python3-pip is installed
    yum:
      name: python3-pip
      state: latest
    become: true

  - name: Ensure cassandra-driver is installed for python.
    shell: pip3 install cassandra-driver
    become: true

  - name: Ensure validation file is present and up to date.
    copy:
      src: "files_to_copy/check_cassandra_peers.py"
      dest: "/tmp/check_cassandra_peers.py"

  - name: Get peers table.
    tags:
      - beta_py
    command: python3 /tmp/check_cassandra_peers.py

- name: Run shell script to check cassandra cluster state.
  hosts: seed1
  tags:
    - validate_sh

  tasks:
  - name: Ensure shell command is present and up to date
    copy:
      src: "files_to_copy/check_cassandra"
      dest: "/tmp/check_cassandra"

  - name: Perform tests.
    tags:
      - beta_sh
    command: cqlsh -f /tmp/check_cassandra

- name: Remove cassandra.
  hosts: databases
  tags: removal

  tasks:
  - name: Ensure cassandra package is absent.
    yum:
      name: cassandra
      state: absent
    become: true

